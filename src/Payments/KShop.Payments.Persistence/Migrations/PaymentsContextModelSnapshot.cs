// <auto-generated />
using System;
using KShop.Payments.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KShop.Payments.Persistence
{
    [DbContext(typeof(PaymentsContext))]
    partial class PaymentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("KShop.Payments.Persistence.Entities.Payment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ExternalID")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastCheckingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("char(36)");

                    b.Property<int>("PaymentProvider")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("KShop.Payments.Persistence.Entities.PaymentLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PaymentID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaymentID");

                    b.ToTable("PaymentLogs");
                });

            modelBuilder.Entity("KShop.Payments.Persistence.Entities.Payment", b =>
                {
                    b.OwnsOne("KShop.Communications.Contracts.ValueObjects.Money", "Money", b1 =>
                        {
                            b1.Property<Guid>("PaymentID")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Currency")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("longtext")
                                .HasDefaultValue("RUB")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("decimal(65,30)")
                                .HasDefaultValue(0m)
                                .HasColumnName("Price");

                            b1.HasKey("PaymentID");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentID");
                        });

                    b.Navigation("Money");
                });

            modelBuilder.Entity("KShop.Payments.Persistence.Entities.PaymentLog", b =>
                {
                    b.HasOne("KShop.Payments.Persistence.Entities.Payment", "Payment")
                        .WithMany("Logs")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("KShop.Payments.Persistence.Entities.Payment", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
