// <auto-generated />
using System;
using KShop.Products.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KShop.Products.Persistence.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20210625113202_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("KShop.Products.Persistence.Attribute", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Category", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Product", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CategoryID")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductAttribute", b =>
                {
                    b.Property<uint>("ProductID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("AttributeID")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ProductID", "AttributeID");

                    b.HasIndex("AttributeID");

                    b.ToTable("ProductAttribute");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductPosition", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("ProductID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Quantity")
                        .HasColumnType("int unsigned");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductPositions");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductReserve", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CompleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("CustomerID")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("char(36)");

                    b.Property<uint>("ProductID")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Quantity")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductReserves");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Product", b =>
                {
                    b.HasOne("KShop.Products.Persistence.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KShop.Shared.Domain.Contracts.Money", "Money", b1 =>
                        {
                            b1.Property<uint>("ProductID")
                                .HasColumnType("int unsigned");

                            b1.Property<string>("Currency")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("longtext")
                                .HasDefaultValue("RUB")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("decimal(65,30)")
                                .HasDefaultValue(0m)
                                .HasColumnName("Price");

                            b1.HasKey("ProductID");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductID");
                        });

                    b.Navigation("Category");

                    b.Navigation("Money");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductAttribute", b =>
                {
                    b.HasOne("KShop.Products.Persistence.Attribute", "Attribute")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KShop.Products.Persistence.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductPosition", b =>
                {
                    b.HasOne("KShop.Products.Persistence.Product", "Product")
                        .WithMany("Positions")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KShop.Products.Persistence.ProductReserve", b =>
                {
                    b.HasOne("KShop.Products.Persistence.Product", "Product")
                        .WithMany("Reserves")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Attribute", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KShop.Products.Persistence.Product", b =>
                {
                    b.Navigation("Positions");

                    b.Navigation("ProductAttributes");

                    b.Navigation("Reserves");
                });
#pragma warning restore 612, 618
        }
    }
}
